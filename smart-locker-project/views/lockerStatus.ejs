<!-- lockerStatus.ejs -->
<div>
    <h2>Locker Status</h2>
    <p>Current status of your locker:</p>
    
    <!-- Dropdown menu to select the chart type -->
    <select id="chartType" onchange="updateChart()">
        <option value="temperature">Temperature</option>
        <option value="pressure">Pressure</option>
        <option value="humidity">Humidity</option>
    </select>

    <!-- Chart container -->
    <div>
        <canvas id="lockerChart"></canvas>
    </div>
</div>

<script>
    var chart; // Global chart variable to update the chart

    document.addEventListener('DOMContentLoaded', function() {
        loadLockerStatus();
    });

    function loadLockerStatus() {
        const channelID = 51245;
        fetch(`https://api.thingspeak.com/channels/${channelID}/feeds.json?results=60`)
            .then(response => response.json())
            .then(data => {
                createChart(data.feeds, 'temperature');
            });
    }

    function createChart(feeds, chartType) {
        const ctx = document.getElementById('lockerChart').getContext('2d');
        const labels = feeds.map(feed => new Date(feed.created_at).toLocaleTimeString());

        let dataField;
        let borderColor;
        let backgroundColor;

        switch(chartType) {
            case 'temperature':
                dataField = feeds.map(feed => feed.field1);
                borderColor = 'rgb(255, 99, 132)';
                backgroundColor = 'rgba(255, 99, 132, 0.5)';
                break;
            case 'pressure':
                dataField = feeds.map(feed => feed.field2);
                borderColor = 'rgb(54, 162, 235)';
                backgroundColor = 'rgba(54, 162, 235, 0.5)';
                break;
            case 'humidity':
                dataField = feeds.map(feed => feed.field3);
                borderColor = 'rgb(75, 192, 192)';
                backgroundColor = 'rgba(75, 192, 192, 0.5)';
                break;
            // Add more cases if there are more types
        }

        if(chart) chart.destroy(); // Destroy the previous chart if it exists

        chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: chartType.charAt(0).toUpperCase() + chartType.slice(1),
                    data: dataField,
                    borderColor: borderColor,
                    backgroundColor: backgroundColor,
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    function updateChart() {
        const chartType = document.getElementById('chartType').value;
        loadLockerStatus(); // Reload the locker status with the new chart type
        // Note: You might want to pass chartType to loadLockerStatus and then to createChart depending on how your API and data handling are set up
    }
</script>
